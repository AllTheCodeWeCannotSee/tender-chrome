(()=>{function e(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var n,o,a,i,c=[],u=!0,l=!1;try{if(a=(t=t.call(e)).next,0===r){if(Object(t)!==t)return;u=!1}else for(;!(u=(n=a.call(t)).done)&&(c.push(n.value),c.length!==r);u=!0);}catch(e){l=!0,o=e}finally{try{if(!u&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(l)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return r(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function r(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=Array(r);t<r;t++)n[t]=e[t];return n}var t={},n=new WeakMap,o=0,a=new WeakSet,i=null;function c(e){for(var r,i=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,{acceptNode:function(e){return!e.parentNode||"STYLE"!==e.parentNode.nodeName&&"SCRIPT"!==e.parentNode.nodeName?a.has(e)?NodeFilter.FILTER_REJECT:e.nodeValue.trim().length>0?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT:NodeFilter.FILTER_REJECT}},!1);r=i.nextNode();)if(!n.has(r)){var c="node_".concat(o++);n.set(r,c),t[c]={node:r,text:r.nodeValue.trim()}}}function u(){clearTimeout(i),i=setTimeout((function(){!function(){var r=Object.entries(t);if(r.length){t={};var n=JSON.stringify(r.reduce((function(r,t){var n=e(t,2),o=n[0],a=n[1].text;return r[o]=a,r}),{}));chrome.runtime.sendMessage({type:"API_REQUEST",data:n},(function(t){if(t&&t.success&&t.data)try{var n=t.data;n.startsWith("```")&&(n=n.replace(/^```(?:json)?\s*/,"").replace(/\s*```$/,""));var o=JSON.parse(n);r.forEach((function(r){var t=e(r,2),n=t[0],i=t[1].node;o.hasOwnProperty(n)?(i.nodeValue="ðŸ˜„"+o[n],a.add(i)):console.error("Missing updated node for:",n)}))}catch(e){console.error("JSON parse error:",e)}else t&&!t.success&&console.error("API request failed:",t.error)}))}}(),i=null}),1)}window.addEventListener("DOMContentLoaded",(function(){c(document.body),u(),new MutationObserver((function(e){e.forEach((function(e){"childList"===e.type&&(e.addedNodes.forEach((function(e){e.nodeType===Node.ELEMENT_NODE&&c(e)})),u())}))})).observe(document.body,{childList:!0,subtree:!0})}))})();